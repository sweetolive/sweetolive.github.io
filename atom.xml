<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>佘一人</title>
  
  <subtitle>长乐未央  长毋相忘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sweetolive.github.io/"/>
  <updated>2021-06-12T09:09:44.027Z</updated>
  <id>http://sweetolive.github.io/</id>
  
  <author>
    <name>Lings</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全排列算法-递归&amp;字典序实现</title>
    <link href="http://sweetolive.github.io/2021/06/12/%E5%85%A8%E6%8E%92%E5%88%97/"/>
    <id>http://sweetolive.github.io/2021/06/12/全排列/</id>
    <published>2021-06-12T09:00:00.000Z</published>
    <updated>2021-06-12T09:09:44.027Z</updated>
    
    <content type="html"><![CDATA[<h4 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h4><p>从n个不同元素中任取m（m≤n）个元素，按照一定的顺序排列起来，叫做从n个不同元素中取出m个元素的一个排列。当m=n时所有的排列情况叫全排列。</p><a id="more"></a><p><strong>例如：</strong></p><p>1 、2 、3三个元素的全排列为：</p><p>{1，2，3}，{1，3，2}，{2，1，3}，{2，3，1}，{3，1，2}，{3，2，1}。</p><p><img src="https://sweetolive.github.io/2020/04/03/1/image/FullPermutation.png" alt></p><hr><h4 id="解法1（递归）"><a href="#解法1（递归）" class="headerlink" title="解法1（递归）"></a>解法1（递归）</h4><p>如下图：要对1、2、3、4进行排序，第一个位置上的元素有四种可能：1或2或3或4，假如已经确定了第一个元素为4，剩下的第二个位置上可以是1、2、3，很显然这具有递归结构，如果原始要排列的数组顺序为1、2、3、4，现在只要分别交换1、2，1、3，1、4然后对剩下的3个元素进行递归的排列。</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">Permutation</span><span class="params">(<span class="keyword">char</span> chs[],<span class="keyword">int</span> start )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(start==chs.length-<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Arrays.toString(chs);</span><br><span class="line">            <span class="comment">//如果已经到了数组的最后一个元素，前面的元素已经排好，输出。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=chs.length-<span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//把第一个元素分别与后面的元素进行交换，递归的调用其子数组进行排序</span></span><br><span class="line">                Swap(chs,i,start);</span><br><span class="line">                Permutation(chs,start+<span class="number">1</span>);</span><br><span class="line">                Swap(chs,i,start);</span><br><span class="line">        <span class="comment">//子数组排序返回后要将第一个元素交换回来。  </span></span><br><span class="line">        <span class="comment">//如果不交换回来会出错，比如说第一次1、2交换，第一个位置为2，子数组排序返回后如果不将1、2</span></span><br><span class="line">        <span class="comment">//交换回来第二次交换的时候就会将2、3交换，因此必须将1、2交换使1还是在第一个位置 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">Swap</span><span class="params">(<span class="keyword">char</span> chs[],<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> temp;</span><br><span class="line">        temp=chs[i];</span><br><span class="line">        chs[i]=chs[j];</span><br><span class="line">        chs[j]=temp;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>递归方法会对重复元素进行交换比如使用递归对{1，1}进行全排序会输出：{1，1}，{1，1}两个重复的结果。要在排序的时候去掉重复结果，可以修改一下代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Permutation</span><span class="params">(<span class="keyword">char</span> chs[],<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(start==end)</span><br><span class="line">        &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> String(chs));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=chs.length-<span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==start||chs[i]!=chs[start])</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="comment">//在排列的时候进行判断如果后面的元素与start相同时就不进行排序。</span></span><br><span class="line">            <span class="comment">//这样就可以避免对重复元素进行排序</span></span><br><span class="line">                Swap(chs,i,start);</span><br><span class="line">                Permutation(chs,start+<span class="number">1</span>);</span><br><span class="line">                Swap(chs,i,start);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="解法2（字典序法）"><a href="#解法2（字典序法）" class="headerlink" title="解法2（字典序法）"></a>解法2（字典序法）</h4><h5 id="字典序法"><a href="#字典序法" class="headerlink" title="字典序法"></a>字典序法</h5><p>对给定的字符集中的字符规定了一个先后关系，在此基础上规定两个全排列的先后是从左到右逐个比较对应的字符的先后。<br>列如：对a、b、c进行排序的结果是{a,b,c}、{a,c,b}、{b,a,c}、{b,c,a}、{c,a,b}、{c,b,a}<br>字典序法的优点是排列的结果按照顺序输出并且对于重复的元素不进行重复排序。</p><h5 id="字典排序法的思想"><a href="#字典排序法的思想" class="headerlink" title="字典排序法的思想"></a>字典排序法的思想</h5><p>例如：对元素1，2，3，4进行排序，假设默认的数组顺序为{1，2，3，4}，先输出第一个排列：1、2、3、4。然后从右向左找到第一个非递增的数，4，3，因为3比4小，交换3、4，并且对3后面的数进行逆序排列，第二个排列为{1，2，4，3}，再从右向左3，4，2，发现2比4小，交换从右向左第一个比2大的数，交换后{1，3，4，2}再对3后面的数进行逆序排列第三个序列为：{1，3，2，4}<br>依次循环直到数组成为完全递减数组结束1、2、3、4字典排序的最大序列为{4，3，2，1}。</p><p><strong>代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">PermutationWithDictionary</span><span class="params">(<span class="keyword">char</span> chs[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Arrays.sort(chs);</span><br><span class="line">        <span class="comment">//先对数组的元素进行依次排序</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(chs);</span><br><span class="line">            <span class="keyword">int</span> j=chs.length-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(j=chs.length-<span class="number">2</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(chs[j]&lt;chs[j+<span class="number">1</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    index=j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">//从右向左找到第一个非递增的元素</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;           </span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(j=chs.length-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(chs[j]&gt;chs[index])</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">//从右向左找到第一个比非递增元素大的元素</span></span><br><span class="line">            &#125;</span><br><span class="line">                Swap(chs,index,j);</span><br><span class="line">                <span class="comment">//交换找到的两个元素</span></span><br><span class="line">                Reverse(chs,index+<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//对非递增元素位置后面的数组进行逆序排列</span></span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">char</span> chs[],<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> k=i,j=chs.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(k&lt;j)</span><br><span class="line">        &#123;</span><br><span class="line">            Swap(chs,k,j);</span><br><span class="line">            k++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Swap</span><span class="params">(<span class="keyword">char</span> chs[],<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> temp;</span><br><span class="line">        temp=chs[i];</span><br><span class="line">        chs[i]=chs[j];</span><br><span class="line">        chs[j]=temp;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;全排列&quot;&gt;&lt;a href=&quot;#全排列&quot; class=&quot;headerlink&quot; title=&quot;全排列&quot;&gt;&lt;/a&gt;全排列&lt;/h4&gt;&lt;p&gt;从n个不同元素中任取m（m≤n）个元素，按照一定的顺序排列起来，叫做从n个不同元素中取出m个元素的一个排列。当m=n时所有的排列情况叫全排列。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://sweetolive.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo next主题添加鼠标特效</title>
    <link href="http://sweetolive.github.io/2020/07/17/1/"/>
    <id>http://sweetolive.github.io/2020/07/17/1/</id>
    <published>2020-07-17T05:52:48.000Z</published>
    <updated>2020-07-17T07:12:14.648Z</updated>
    
    <content type="html"><![CDATA[<h4 id="话不多说，先上效果图"><a href="#话不多说，先上效果图" class="headerlink" title="话不多说，先上效果图"></a>话不多说，先上效果图</h4><blockquote><p>樱花特效（跟随鼠标移动）<br><img src="//sweetolive.github.io/2020/07/17/1/01.png" alt="01"><a id="more"></a></p></blockquote><blockquote><p>爆炸特效（点击鼠标）<br><img src="//sweetolive.github.io/2020/07/17/1/02.png" alt="02"></p></blockquote><h4 id="在themes-next-source-js新建文件夹cursor"><a href="#在themes-next-source-js新建文件夹cursor" class="headerlink" title="在themes\next\source\js新建文件夹cursor"></a>在themes\next\source\js新建文件夹cursor</h4><h4 id="在文件夹cursor新建下面两个js文件"><a href="#在文件夹cursor新建下面两个js文件" class="headerlink" title="在文件夹cursor新建下面两个js文件"></a>在文件夹cursor新建下面两个js文件</h4><blockquote><p>cherry.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">cherry</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> possibleColors = [<span class="string">"#D61C59"</span>, <span class="string">"#E7D84B"</span>, <span class="string">"#1B8798"</span>]</span><br><span class="line">  <span class="keyword">var</span> width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">  <span class="keyword">var</span> height = <span class="built_in">window</span>.innerHeight;</span><br><span class="line">  <span class="keyword">var</span> cursor = &#123;<span class="attr">x</span>: width/<span class="number">2</span>, <span class="attr">y</span>: width/<span class="number">2</span>&#125;;</span><br><span class="line">  <span class="keyword">var</span> particles = [];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    bindEvents();</span><br><span class="line">    loop();</span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="comment">// Bind events that are needed</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bindEvents</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'mousemove'</span>, onMouseMove);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'touchmove'</span>, onTouchMove);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, onTouchMove);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, onWindowResize);</span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">onWindowResize</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    height = <span class="built_in">window</span>.innerHeight;</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">onTouchMove</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( e.touches.length &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">      <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; e.touches.length; i++ ) &#123;</span><br><span class="line">        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*possibleColors.length)]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">onMouseMove</span>(<span class="params">e</span>) </span>&#123;    </span><br><span class="line">    cursor.x = e.clientX;</span><br><span class="line">    cursor.y = e.clientY;</span><br><span class="line">    </span><br><span class="line">    addParticle( cursor.x, cursor.y, possibleColors[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*possibleColors.length)]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addParticle</span>(<span class="params">x, y, color</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> particle = <span class="keyword">new</span> Particle();</span><br><span class="line">    particle.init(x, y, color);</span><br><span class="line">    particles.push(particle);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">updateParticles</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; particles.length; i++ ) &#123;</span><br><span class="line">      particles[i].update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i = particles.length <span class="number">-1</span>; i &gt;= <span class="number">0</span>; i-- ) &#123;</span><br><span class="line">      <span class="keyword">if</span>( particles[i].lifeSpan &lt; <span class="number">0</span> ) &#123;</span><br><span class="line">        particles[i].die();</span><br><span class="line">        particles.splice(i, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    requestAnimationFrame(loop);</span><br><span class="line">    updateParticles();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Particle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.character = <span class="string">"*"</span>;</span><br><span class="line">    <span class="keyword">this</span>.lifeSpan = <span class="number">120</span>; <span class="comment">//ms</span></span><br><span class="line">    <span class="keyword">this</span>.initialStyles =&#123;</span><br><span class="line">      <span class="string">"position"</span>: <span class="string">"fixed"</span>,</span><br><span class="line">      <span class="string">"top"</span>: <span class="string">"0"</span>, <span class="comment">//必须加</span></span><br><span class="line">      <span class="string">"display"</span>: <span class="string">"block"</span>,</span><br><span class="line">      <span class="string">"pointerEvents"</span>: <span class="string">"none"</span>,</span><br><span class="line">      <span class="string">"z-index"</span>: <span class="string">"10000000"</span>,</span><br><span class="line">      <span class="string">"fontSize"</span>: <span class="string">"20px"</span>,</span><br><span class="line">      <span class="string">"will-change"</span>: <span class="string">"transform"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.init = <span class="function"><span class="keyword">function</span>(<span class="params">x, y, color</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.velocity = &#123;</span><br><span class="line">        x:  (<span class="built_in">Math</span>.random() &lt; <span class="number">0.5</span> ? <span class="number">-1</span> : <span class="number">1</span>) * (<span class="built_in">Math</span>.random() / <span class="number">2</span>),</span><br><span class="line">        y: <span class="number">1</span></span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">this</span>.position = &#123;<span class="attr">x</span>: x - <span class="number">10</span>, <span class="attr">y</span>: y - <span class="number">20</span>&#125;;</span><br><span class="line">      <span class="keyword">this</span>.initialStyles.color = color;</span><br><span class="line">      <span class="built_in">console</span>.log(color);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.element = <span class="built_in">document</span>.createElement(<span class="string">'span'</span>);</span><br><span class="line">      <span class="keyword">this</span>.element.innerHTML = <span class="keyword">this</span>.character;</span><br><span class="line">      applyProperties(<span class="keyword">this</span>.element, <span class="keyword">this</span>.initialStyles);</span><br><span class="line">      <span class="keyword">this</span>.update();</span><br><span class="line">      </span><br><span class="line">      <span class="built_in">document</span>.body.appendChild(<span class="keyword">this</span>.element);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.update = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.position.x += <span class="keyword">this</span>.velocity.x;</span><br><span class="line">      <span class="keyword">this</span>.position.y += <span class="keyword">this</span>.velocity.y;</span><br><span class="line">      <span class="keyword">this</span>.lifeSpan--;</span><br><span class="line">      <span class="keyword">this</span>.element.style.transform = <span class="string">"translate3d("</span> + <span class="keyword">this</span>.position.x + <span class="string">"px,"</span> + <span class="keyword">this</span>.position.y + <span class="string">"px,0) scale("</span> + (<span class="keyword">this</span>.lifeSpan / <span class="number">120</span>) + <span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.die = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.element.parentNode.removeChild(<span class="keyword">this</span>.element);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">applyProperties</span>(<span class="params"> target, properties </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> properties ) &#123;</span><br><span class="line">      target.style[ key ] = properties[ key ];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><blockquote><p>explosion.min.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><h4 id="在themes-next-layout新建文件夹-custom"><a href="#在themes-next-layout新建文件夹-custom" class="headerlink" title="在themes\next\layout新建文件夹_custom"></a>在themes\next\layout新建文件夹_custom</h4><h4 id="在文件夹-custom新建custom-swig文件，添加下面代码"><a href="#在文件夹-custom新建custom-swig文件，添加下面代码" class="headerlink" title="在文件夹_custom新建custom.swig文件，添加下面代码"></a>在文件夹_custom新建custom.swig文件，添加下面代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">这里因为包含标签，显示不出来，就把&#123;&#125;,换成[]，记得改过来</span><br><span class="line">[%- if theme.cursor_effect %]</span><br><span class="line">  [%- if theme.cursor_effect.type == &quot;explosion&quot; %]</span><br><span class="line">    &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;script src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/explosion.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  [%- elseif theme.cursor_effect.type == &quot;cherry&quot; %]</span><br><span class="line">    &lt;script src=&quot;/js/cursor/cherry.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  [%- endif %]</span><br><span class="line">[%- endif %]</span><br></pre></td></tr></table></figure><h4 id="在themes-next-layout下找到-layout-swig，添加下面代码"><a href="#在themes-next-layout下找到-layout-swig，添加下面代码" class="headerlink" title="在themes\next\layout下找到_layout.swig，添加下面代码"></a>在themes\next\layout下找到_layout.swig，添加下面代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">记得把 [] 转换成 &#123;&#125; </span><br><span class="line">[% include &apos;_custom/custom.swig&apos; %]</span><br></pre></td></tr></table></figure><h4 id="最后在主题配置文件-config-yml，添加下面代码，type选择不同特效"><a href="#最后在主题配置文件-config-yml，添加下面代码，type选择不同特效" class="headerlink" title="最后在主题配置文件_config.yml，添加下面代码，type选择不同特效"></a>最后在主题配置文件_config.yml，添加下面代码，type选择不同特效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># cherry: 樱花 | explosion：爆炸 </span><br><span class="line">cursor_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  type: cherry </span><br></pre></td></tr></table></figure><p>启动服务就可以看到特效了</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;话不多说，先上效果图&quot;&gt;&lt;a href=&quot;#话不多说，先上效果图&quot; class=&quot;headerlink&quot; title=&quot;话不多说，先上效果图&quot;&gt;&lt;/a&gt;话不多说，先上效果图&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;樱花特效（跟随鼠标移动）&lt;br&gt;&lt;img src=&quot;//sweetolive.github.io/2020/07/17/1/01.png&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://sweetolive.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo插入本地图片、及遇到的问题</title>
    <link href="http://sweetolive.github.io/2020/07/16/1/"/>
    <id>http://sweetolive.github.io/2020/07/16/1/</id>
    <published>2020-07-16T00:45:13.000Z</published>
    <updated>2020-07-17T03:14:43.045Z</updated>
    
    <content type="html"><![CDATA[<p>之前用的是自己服务器图片的直链，现在服务器快到期了，想想能不能直接用本地图片代替，所以写了这篇文章。<a id="more"></a></p><h4 id="先安装图片插件hexo-asset-image，这里我们安装的是1-0-0版本的，这里会有个小坑，在下面会详细讲"><a href="#先安装图片插件hexo-asset-image，这里我们安装的是1-0-0版本的，这里会有个小坑，在下面会详细讲" class="headerlink" title="先安装图片插件hexo-asset-image，这里我们安装的是1.0.0版本的，这里会有个小坑，在下面会详细讲"></a>先安装图片插件hexo-asset-image，这里我们安装的是1.0.0版本的，这里会有个小坑，在下面会详细讲</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/07/16/1/01.png" alt="01"></p><h4 id="打开配置文件-config-yml，找到post-asset-folder，设置为true"><a href="#打开配置文件-config-yml，找到post-asset-folder，设置为true" class="headerlink" title="打开配置文件_config.yml，找到post_asset_folder，设置为true"></a>打开配置文件_config.yml，找到post_asset_folder，设置为true</h4><h4 id="新建一篇文章-hexo-n-文章名称-，然后在-posts会出现对应名称的文件夹跟md文件，我这里是2020-07-16-1（如图）"><a href="#新建一篇文章-hexo-n-文章名称-，然后在-posts会出现对应名称的文件夹跟md文件，我这里是2020-07-16-1（如图）" class="headerlink" title="新建一篇文章  hexo n 文章名称 ，然后在_posts会出现对应名称的文件夹跟md文件，我这里是2020-07-16-1（如图）"></a>新建一篇文章  hexo n 文章名称 ，然后在_posts会出现对应名称的文件夹跟md文件，我这里是2020-07-16-1（如图）</h4><pre><code>注意：这里的文件夹是存放你要插入到文章图片的</code></pre><p><img src="//sweetolive.github.io/2020/07/16/1/02.png" alt="02"></p><h4 id="使用图片，我这里是用到markdown相关图片插入语法先定义了再使用"><a href="#使用图片，我这里是用到markdown相关图片插入语法先定义了再使用" class="headerlink" title="使用图片，我这里是用到markdown相关图片插入语法先定义了再使用"></a>使用图片，我这里是用到markdown相关图片插入语法先定义了再使用</h4><p><img src="//sweetolive.github.io/2020/07/16/1/03.png" alt="03"></p><h4 id="最后执行命令，把服务跑起来"><a href="#最后执行命令，把服务跑起来" class="headerlink" title="最后执行命令，把服务跑起来"></a>最后执行命令，把服务跑起来</h4><blockquote><p>发现在控制台打印出来的一部分信息是这样的，这里很关键<br>  update link as:–&gt;/.io//2020/07/16/1/01.png<br>  update link as:–&gt;/.io//2020/07/16/1/02.png<br><img src="//sweetolive.github.io/2020/07/16/1/04.png" alt="04"><br>打开页面，可以发现图片显示不出来<br><img src="//sweetolive.github.io/2020/07/16/1/05.png" alt="05"><br>再通过F12打开调试页面定位图片，发现图片地址根本不是指向本地的图片地址<br><img src="//sweetolive.github.io/2020/07/16/1/06.png" alt="06"></p></blockquote><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p>问题出现原因：是hexo-asset-image这个插件的bug，Hexo版本3.0以上获取网站url的方式与3.0以下有些不同,我这里用的是3.9.0版本的<br>  解决：这里我们要修改它的index.js，打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>);</span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">'.'</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_post_render'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line"><span class="keyword">var</span> link = data.permalink;</span><br><span class="line"><span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span><br><span class="line"><span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span><br><span class="line">link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> toprocess = [<span class="string">'excerpt'</span>, <span class="string">'more'</span>, <span class="string">'content'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">  <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">xmlMode: <span class="literal">false</span>,</span><br><span class="line">lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">decodeEntities: <span class="literal">false</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $(<span class="string">'img'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="keyword">this</span>).attr(<span class="string">'src'</span>))&#123;</span><br><span class="line"><span class="comment">// For windows style path, we replace '\' to '/'.</span></span><br><span class="line"><span class="keyword">var</span> src = $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">   !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">  <span class="comment">// For "about" page, the first part of "src" can't be removed.</span></span><br><span class="line">  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">  <span class="keyword">var</span> linkArray = link.split(<span class="string">'/'</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> srcArray = src.split(<span class="string">'/'</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span> &amp;&amp; elem != <span class="string">'.'</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src = srcArray.join(<span class="string">'/'</span>);</span><br><span class="line">  $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>, config.root + link + src);</span><br><span class="line">  <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">"update link as:--&gt;"</span>+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">"no src attr, skipped..."</span>);</span><br><span class="line"><span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  data[key] = $.html();</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>还有一步就是要修改你的Github仓库名，打开_config.yml，找到url改为你的仓库名称</p></blockquote><p><img src="//sweetolive.github.io/2020/07/16/1/07.png" alt="07"></p><h4 id="这时候我们重新启服务，可以看到图片地址正确了，打开页面图片也可以正常显示了，大功告成"><a href="#这时候我们重新启服务，可以看到图片地址正确了，打开页面图片也可以正常显示了，大功告成" class="headerlink" title="这时候我们重新启服务，可以看到图片地址正确了，打开页面图片也可以正常显示了，大功告成"></a>这时候我们重新启服务，可以看到图片地址正确了，打开页面图片也可以正常显示了，大功告成</h4><p><img src="//sweetolive.github.io/2020/07/16/1/08.png" alt="08"><br><img src="//sweetolive.github.io/2020/07/16/1/09.png" alt="09"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用的是自己服务器图片的直链，现在服务器快到期了，想想能不能直接用本地图片代替，所以写了这篇文章。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://sweetolive.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客在换了电脑或者重装系统后如何在新电脑恢复</title>
    <link href="http://sweetolive.github.io/2020/04/03/1/"/>
    <id>http://sweetolive.github.io/2020/04/03/1/</id>
    <published>2020-04-03T06:43:01.000Z</published>
    <updated>2020-07-17T03:27:51.564Z</updated>
    
    <content type="html"><![CDATA[<p>因为过年换了新电脑，然后因为疫情的事情，把博客给忘了，现在抽空重新把博客环境在新电脑上面搭建起来，于是写了这篇分享。<a id="more"></a></p><h4 id="在新的环境下，自行确保安装了Node-js、Git"><a href="#在新的环境下，自行确保安装了Node-js、Git" class="headerlink" title="在新的环境下，自行确保安装了Node.js、Git"></a>在新的环境下，自行确保安装了Node.js、Git</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/01.png" alt="01"></p><h4 id="一般情况下，新电脑新系统都是没有SSH-Key，要重新配置"><a href="#一般情况下，新电脑新系统都是没有SSH-Key，要重新配置" class="headerlink" title="一般情况下，新电脑新系统都是没有SSH Key，要重新配置"></a>一般情况下，新电脑新系统都是没有SSH Key，要重新配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看本地是否有配置SSH Key</span><br><span class="line">cd ~/. ssh  </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本地新建SSH Key，不会动，点Enter，直到出现底下图片显示的</span><br><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮件地址&quot;    </span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/02.jpg" alt="02"></p><h4 id="打开用户目录，找到-ssh-id-rsa-pub文件，记事本打开并复制里面的内容-打开你的github主页，进入个人设置-gt-SSH-and-GPG-keys-gt-New-SSH-key："><a href="#打开用户目录，找到-ssh-id-rsa-pub文件，记事本打开并复制里面的内容-打开你的github主页，进入个人设置-gt-SSH-and-GPG-keys-gt-New-SSH-key：" class="headerlink" title="打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容,打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key："></a>打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容,打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</h4><p><img src="//sweetolive.github.io/2020/04/03/1/03.png" alt="03"></p><h4 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/04.png" alt="04"></p><h4 id="用户名邮箱配置"><a href="#用户名邮箱配置" class="headerlink" title="用户名邮箱配置"></a>用户名邮箱配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你的github用户名，非昵称</span><br><span class="line">git config --global user.name &quot;pgzxc&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你的github注册邮箱</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/05.png" alt="05"></p><h4 id="进入到原有博客文件夹，可以从旧电脑或者原有系统里面Copy，删除里面”node-modules”、”public”、”-git”、”-deploy-git”文件夹"><a href="#进入到原有博客文件夹，可以从旧电脑或者原有系统里面Copy，删除里面”node-modules”、”public”、”-git”、”-deploy-git”文件夹" class="headerlink" title="进入到原有博客文件夹，可以从旧电脑或者原有系统里面Copy，删除里面”node_modules”、”public”、”.git”、”.deploy_git”文件夹"></a>进入到原有博客文件夹，可以从旧电脑或者原有系统里面Copy，删除里面”node_modules”、”public”、”.git”、”.deploy_git”文件夹</h4><p><img src="//sweetolive.github.io/2020/04/03/1/06.png" alt="06"></p><h4 id="关联Github项目"><a href="#关联Github项目" class="headerlink" title="关联Github项目"></a>关联Github项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/SweetOlive/sweetolive.github.io.git</span><br></pre></td></tr></table></figure><h4 id="运行指令"><a href="#运行指令" class="headerlink" title="运行指令"></a>运行指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装Hexo</span><br><span class="line">&quot;npm install –g hexo&quot;</span><br><span class="line">安装项目依赖</span><br><span class="line">&quot;npm install&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">生成并本地预览</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">访问http://localhost:4000</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/07.png" alt="07"><br><img src="//sweetolive.github.io/2020/04/03/1/08.png" alt="08"><br><img src="//sweetolive.github.io/2020/04/03/1/09.png" alt="09"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提交到GitHub，可以看到有提交记录，访问https://sweetolive.github.io/，也可以看到</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="//sweetolive.github.io/2020/04/03/1/10.png" alt="10"><br><img src="//sweetolive.github.io/2020/04/03/1/11.png" alt="11"></p><p>至此，就完成了，大功告成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为过年换了新电脑，然后因为疫情的事情，把博客给忘了，现在抽空重新把博客环境在新电脑上面搭建起来，于是写了这篇分享。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://sweetolive.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>佘一人</title>
    <link href="http://sweetolive.github.io/2019/12/05/first/"/>
    <id>http://sweetolive.github.io/2019/12/05/first/</id>
    <published>2019-12-05T02:34:31.000Z</published>
    <updated>2020-04-04T05:48:09.580Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在所有文章的开头"><a href="#写在所有文章的开头" class="headerlink" title="写在所有文章的开头"></a>写在所有文章的开头</h4><blockquote><p>其实我也不知道要说些什么，作为一名菜菜程序猿，文笔就是不那么好，嗯，终于把个人博客搭建好了，查询了许多资料，历经九九八十一难。</p></blockquote><a id="more"></a><blockquote><p>在接下来的时间里，会分享一下开发心得、以及工具、还有一些实用性的文章，希望能给大家带来帮助！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在所有文章的开头&quot;&gt;&lt;a href=&quot;#写在所有文章的开头&quot; class=&quot;headerlink&quot; title=&quot;写在所有文章的开头&quot;&gt;&lt;/a&gt;写在所有文章的开头&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;其实我也不知道要说些什么，作为一名菜菜程序猿，文笔就是不那么好，嗯，终于把个人博客搭建好了，查询了许多资料，历经九九八十一难。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="寄语" scheme="http://sweetolive.github.io/categories/%E5%AF%84%E8%AF%AD/"/>
    
    
  </entry>
  
</feed>
